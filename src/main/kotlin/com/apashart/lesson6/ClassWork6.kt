package com.apashart.lesson6

fun main() {
    val number = 5
    if (number > 5) { //В скобках аргумент
        println("Число больше 5") //Если аргумент true
    } else {
        println("число меньше или равно 5") //Если false
    }
    val intRange: IntRange = 1..10 //Тип данных: Диапазон, всегда возрастающий. Включает граничные значения
    val intRangeUntil = 1 until 10 //Включает только 1 граничное значение
    val downTo = 10 downTo 1 //Убывающий диапазон, только включительный
    val charRange: CharRange = 'a'..'z' //Диапазон для char

    val inRange = 2 in intRange //in - функция, которая проверяет входит ли какое-то значение в ранее указанный диапазон. Булево значение
    val notInRange = 30 !in intRange //in - функция, которая проверяет НЕ входит ли какое-то значение в ранее указанный диапазон. Булево значение

    println(inRange)
    println(intRange)

    val score = 95
    when (score) { // проверяет аргумент на выполнение выражений. Не обязателен. Проверки выполняются по порядку.
        // Используется вместо if/else чтобы код был более читаемым
        in 90..100 -> println("Отлично") //выражение 1 Если аргумент подходит под условие |in 90..100| оператор "то" |->| выполняется |println("Отлично")|
        in 80..89 -> { //выражение 2
            println("Хорошо") //тут может быть блок кода. Но если надо написать много кода, лучше использовать if/else
        }
        in 70..79 -> println("Удовлетворительно") //Выражение 3
        else -> println("Нужно подучить")
    }

//Вычисление значений переменной

    val a = 3
    val b = 4

    val max = if (a > b) a else b //условный оператор может использоваться для присвоения значения переменной. Что является в конце, то результат
    val max2 = if (a < b) {
        println("")
        val c = a * b
        c
    } else {
        b
    }

    //В примере выше с WHEN мы часто использовали println, это не лучшая практика,
    // для этого лучше присвоить некой переменной значение которое надо вывести и затем вывести эту переменную
    val score2 = 95
    val resultScore2 = when (score2) {
        in 90..100 -> "Отлично"
        in 80..89 -> "Хорошо"
        in 70..79 -> "Удовлетворительно"
        else -> "Нужно подучить"
    }
    println(resultScore2)
}

// ПРАКТИЧЕКАЯ РАБОТА
// Функция, которая принимает текущий час и возвращает время суток

fun getTimesOfDay1 (hour: Int): String { // Способ 1. Не оч гуд, так как много операторов сравнения + return опеределяется кажый раз
    if (hour >= 0 && hour < 5) return "Ночь"
    if (hour >= 5 && hour < 11) return "Утро"
}
fun getTimesOfDay2 (hour: Int): String { // Способ 2. Выбор реализован через диапазон + return опеределяется кажый раз
    if (hour in 0..4) return "Ночь"
    if (hour in 5..11) return "Утро"
}
fun getTimesOfDay3 (hour: Int): String { // if else + определение return через условный оператор
    return if (hour < 0 || hour > 23) {
        "Неверное значение времени"
    } else if (hour in 0..4) {
        "Ночь"
    } else if (hour in 5..11) {
        "Утро"
    } else if (hour in 12..16) {
        "День"
    } else {
        "Вечер"
    }
}
fun getTimesOfDay4 (hour: Int): String { // When + определение return через условный оператор
    return when {
        hour < 0 || hour > 23 -> "Неверное значение времени" //так как эта проверка условным оператором а остальные диапазоном мы не можем указать hour в аргументе
        hour in 0..4 -> "Ночь"
        hour in 5..11 -> "Утро"
        hour in 12..16 -> "День"
        else -> "Вечер"
    }
}

//Проверка пароля
// возвращает true если пароль сильный, т.е. больше 8 символов, содержит символы и цифры

fun checkPassword (password: String) : Boolean { //Boolean говотрить что функция должна вернуть тру или фолс
    if (password.length <= 8) return false //Если проверка на НЕ верное количество символов пройдена -> false, если нет то идем дальше
    // if (checkSimbols(password)) return true //Если проверка на символы пройдена -> true
    // /* else */ return false //тут else не обязательно так как все равно вернется false при таком коде
    return checkSimbols(password) // можно сократить код оставив ток такое, так как функция checkSimbols и так возвращает булево значение
}
fun checkSimbols (password: String) : Boolean { //функция заглушка проверки на символов, так как символы проверять пока что сложно
    return false
}

//Оценки в школе
//Принимает числа от 0 до 100 и возвращает оценку в американском формате: A B C D F

fun convertMarks (marks: Int) : String {
    return /* val result = */ when (marks) { //объявляем переменную если она нам в дальнейшем понадобится, если нет можем сразу сдать return
        in 90..100 -> "A"
        in 80..89 -> "B"
        in 60..79 -> "C"
        in 40..59 -> "D"
        in 20..39 -> "E"
        in 0..19 -> "F"
        else -> "Не верное значение оценки"
    }
    //println (result)
}
